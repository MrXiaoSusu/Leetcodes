public int numIslands(char[][] grid) {
	if (grid == null || grid.length == 0 || grid[0].length == 0)
		return 0;
    int res = 0;
    char[][] map = new char[grid.length + 2][grid[0].length + 2];
    for (int i = 0; i < map.length; i++)
    	for (int j = 0; j < map[0].length; j++){
    		if (i == 0 || i == map.length - 1 || j == 0 || j == map[0].length - 1)
    			map[i][j] = '0';
    		else
    			map[i][j] = grid[i-1][j-1];
    	}
    for (int i = 1; i < map.length - 1; i++)
    	for (int j = 1; j < map[0].length - 1; j++){
    		if (map[i][j] == '1') {
    			res++;
    			DFS(map, i, j);
    		}
    	}
    return res;
}

public void DFS(char[][] map, int i, int j ) {
	if (map[i][j] == '0')
		return;
	if (map[i][j] == '*')//visited
		return;
	if (map[i][j] == '1')
		map[i][j] = '*';
	DFS(map, i-1, j);
	DFS(map, i+1, j);
	DFS(map, i, j-1);
	DFS(map, i, j+1);
}
