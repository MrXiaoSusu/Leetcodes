class Solution {
    public int maximalRectangle(char[][] matrix) {
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0)
            return 0;
        int[] heights = new int[matrix[0].length];
        Arrays.fill(heights, 0);
        int maxarea = 0;
        for (char[] ch : matrix) {
            for (int i = 0; i < ch.length; i++)
                heights[i] = ch[i]=='1'? heights[i]+1:0;
            Stack<Integer> stack = new Stack<>();
            for (int i = 0; i <= heights.length; i++) {
                int height = (i == heights.length? -1 : heights[i]);
                if (stack.isEmpty() || height >= heights[stack.peek()])
                    stack.push(i);
                else {
                    int tmp = stack.pop();
                    maxarea = Math.max(maxarea, heights[tmp]*(stack.isEmpty()?i:i-1-stack.peek()));
                    i--;
                }
            }
        }
        return maxarea;
    }
}
