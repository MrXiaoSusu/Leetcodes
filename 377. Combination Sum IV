class Solution {
    public int combinationSum4(int[] nums, int target) {
        return gen(nums, target, new HashMap<Integer, Integer>());
    }
    public int gen(int[] nums, int target, HashMap<Integer, Integer> map) {
        if (target == 0)
            return 1;
        if (map.containsKey(target))
            return map.get(target);
        int res = 0;
        for (int num : nums) {
            if (num <= target)
                res += gen(nums, target-num, map);
        }
        map.put(target, res);
        return res;
    }
}
class Solution {
    public int combinationSum4(int[] nums, int target) {
        if (nums == null || nums.length == 0)
            return 0;
        int[] dp = new int[target+1];
        Arrays.fill(dp, 0);
        dp[0] = 1;
        for (int i = 1; i <= target; i++) {
            for (int num : nums) {
                if (i-num>=0)
                    dp[i] += dp[i-num];
            }
        }
        return dp[target];
    }
}
