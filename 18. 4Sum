class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        //corner case
        List<List<Integer>> res = new LinkedList<>();
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 3; i++){
            if (i > 0 && nums[i] == nums[i-1])
                continue;
            if (4 * nums[i] > target)
                break;
            if (nums[i] + 3 * nums[nums.length - 1] < target)
                continue;
            for(int j = i + 1; j < nums.length - 2; j++) {
                if (j > i + 1 && nums[j] == nums[j-1])
                    continue;
                if (nums[i] + 3 * nums[j] > target)
                    break;
                if (nums[i] + nums[j] + 2 * nums[nums.length - 1] < target)
                    continue;
                int lo = j + 1, hi = nums.length - 1;
                while(lo < hi) {
                    if (nums[lo] + nums[hi] + nums[i] + nums[j] == target){
                        res.add(Arrays.asList(nums[i], nums[j], nums[lo], nums[hi]));
                        while(lo < hi && nums[lo] == nums[lo+1]) lo++;
                        while(lo < hi && nums[hi] == nums[hi-1]) hi--;
                        lo++;hi--;
                    }else if (nums[lo] + nums[hi] + nums[i] + nums[j] < target)
                        lo++;
                    else
                        hi--;
                }
            }
                     
        }
        return res;
    }
}
