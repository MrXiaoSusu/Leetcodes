class Solution {
    public boolean canPartition(int[] nums) {
        if (nums.length == 0)
            return true;
        if (nums.length == 1)
            return false;
        Arrays.sort(nums);
        int sum = 0;
        for (int i = 0; i < nums.length; i++)
            sum += nums[i];
        if (sum%2 != 0)
            return false;
        sum = sum/2;
        boolean dp[][] = new boolean[nums.length+1][sum+1];//dp[i][j] denotes sum = j  [0~i-1]
        for (int i = 0; i < dp.length; i++)
            dp[i][0] = true;
        for (int i = 1; i < dp[0].length; i++)
            dp[0][i] = false;
        for (int i = 1; i < dp.length; i++) {
            for (int j = 1; j < dp[0].length; j++) {
                if (nums[i-1] > j)
                    dp[i][j] = dp[i-1][j];
                else
                    dp[i][j] = (dp[i-1][j] || dp[i-1][j-nums[i-1]]);
            }
        }
        
        return dp[nums.length][sum];
    }
}
