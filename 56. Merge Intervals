public List<Interval> merge(List<Interval> intervals) {
        List<Interval> res = new LinkedList<>();
        if (intervals == null || intervals.size() == 0)
            return res;
        Collections.sort(intervals, new Comparator<Interval>(){
            @Override
            public int compare(Interval a, Interval b) {
                return a.start - b.start;
            }
        });
        for (int i = 0; i < intervals.size(); i++) {
            Interval in = intervals.get(i);
            int j = i + 1;
            while (j < intervals.size() && intervals.get(j).start <= in.end){
                in.end = Math.max(in.end, intervals.get(j).end);
                j++;
            }
            res.add(in);
            i = j - 1;
        }
        return res;
    }
