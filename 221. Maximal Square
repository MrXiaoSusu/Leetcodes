class Solution {
    public int maximalSquare(char[][] matrix) {
        if (matrix == null || matrix.length == 0 || matrix[0].length == 0)
            return 0;
        int dp[][] = new int[matrix.length][matrix[0].length];
        for (int i = 0; i < matrix.length; i++) 
            for (int j = 0; j < matrix[0].length; j++)
                if (matrix[i][j] == '1')
                    dp[i][j] = 1;
                else
                    dp[i][j] = 0;
        int res = 0;
        for (int i = matrix.length - 1; i >= 0; i--) 
            for (int j = matrix[0].length - 1; j >= 0; j--) {
                if (matrix[i][j] == '1') {
                    if (i + 1 < matrix.length && j+1 < matrix[0].length)
                        dp[i][j] = 1 + Math.min(dp[i][j+1], Math.min(dp[i+1][j], dp[i+1][j+1]));
                    res = Math.max(res, dp[i][j]);
                }
            }
        return res*res;
    }
}
