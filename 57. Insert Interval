/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution {
    public List<Interval> insert(List<Interval> intervals, Interval newInterval) {
        List<Interval> res = new LinkedList<>();
        int index = 0;
        for (; index < intervals.size(); index++) {
            if (newInterval.end < intervals.get(index).start) {
                break;
            }
            if (newInterval.start > intervals.get(index).end) {
                res.add(intervals.get(index));
                continue;
            }
            newInterval.start = Math.min(newInterval.start, intervals.get(index).start);
            newInterval.end = Math.max(newInterval.end, intervals.get(index).end);
        }   
        res.add(newInterval);
        for (int i = index; i < intervals.size(); i++)
            res.add(intervals.get(i));
        return res;
    }
}
