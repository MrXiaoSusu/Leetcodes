#include <iostream>
#include <algorithm>

using namespace std;

struct TreeNode {
	int val;
	TreeNode *left;
	TreeNode *right;
	TreeNode() {}
	TreeNode(int _val) { val = _val;  left = NULL; right = NULL; }
};

class Solution {
	public:
		int longestPalindrome(string& s) {
			// Write your code here
			int alpha[52];
			for (int i = 0; i < 52; i++)
				alpha[i] = 0;
			for (int i = 0; i < s.length(); i++) {
				if (s[i] <= 'z' && s[i] >= 'a')
					alpha[s[i] - 'a']++;
				else
					alpha[26 + s[i] - 'A']++;
			}
			int length = 0;
			for (int i = 0; i < 52; i++)
				length += alpha[i]%2==0?alpha[i]:alpha[i]-1;
			return length < s.length()?length+1:length;
		}
};
void main() {
	printf("Hello Word!\n");
	
	string s = "ccccdd";
	Solution *solution = new Solution();
	cout << solution->longestPalindrome(s) << endl;
}
