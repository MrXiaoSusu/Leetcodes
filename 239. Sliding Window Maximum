if (nums == null || nums.length == 0)
            return new int[0];
        if (k == 1)
            return nums;
        int[] res = new int[nums.length - k + 1];
        PriorityQueue<Integer> maxheap = new PriorityQueue<Integer>(Collections.reverseOrder());
        for (int i = 0; i < k-1; i++)
            maxheap.add(nums[i]);
        int p = k - 1, i  = 0;
        while (p < nums.length) {
            maxheap.add(nums[p]);
            if (p > k - 1)
                maxheap.remove(nums[p - k]);
            res[i++] = maxheap.peek();
            p++;
        }
        return res;
