if (word1 == null || word2 == null)
            return -1;
        if (word1.length()*word2.length() == 0)
            return (word1.length() == 0? word2.length() : word1.length());
        int[][] Dist = new int[word1.length()+1][word2.length()+1];
        for (int i = 0; i <= word1.length(); i++)
            for(int j = 0; j <= word2.length(); j++) {
                if (i == 0)
                    Dist[0][j] = j;
                if (j == 0)
                    Dist[i][0] = i;
            }
        for (int i = 1; i <= word1.length(); i++)
            for(int j = 1; j <= word2.length(); j++) {
                if (word1.charAt(i-1) == word2.charAt(j-1)) {
                    Dist[i][j] = Dist[i-1][j-1];
                }else
                    Dist[i][j] = Math.min(Dist[i - 1][j - 1] + 1, Math.min(Dist[i-1][j] + 1, Dist[i][j-1] + 1));
            }
            return Dist[word1.length()][word2.length()];
